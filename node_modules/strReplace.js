/* String.replace that supports callbacks
 * Copyright 2011 Wa (logicplace.com)
 * MIT Licensed
 */

var oldRegexReplace = String.prototype.replace;
function regexReplace(str,regex,rpl){
	if(arguments.length == 2){
		rpl = regex;
		regex = str;
		str = this;
	}
	if(typeof(rpl) == "function"){
		var m,total=0,tstr=str,ret,g=regex.global;
		//Check for and remove global
		if(g)regex = new RegExp(regex.source,(regex.multiline?"m":"")+(regex.ignoreCase?"i":""));
		while(tstr && (m=tstr.match(regex))){
			total += m.index
			tstr = tstr.slice(m.index+m[0].length);
			//Adjust so callback thinks it's the whole str
			m.index = total; m.input = str;
			ret = rpl(m);
			str = str.slice(0,total)+ret+str.slice(total + m[0].length);
			total += ret.length;
			if(!g)break;
		}
		return str;
	} else {
		return oldRegexReplace.apply(str,[regex,rpl]);
	}
}

if(typeof(module) != "undefined"){
	module.exports = regexReplace;
} else {
	String.prototype.replace = regexReplace;
}
